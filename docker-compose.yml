services:
  app:
    build: .
    env_file: .env
    ports:
      - "3023:3023"
    depends_on:
      db:
        condition: service_healthy
    command: [ "sh", "-c", "/brickstorage/bin/migrate up && /brickstorage/bin/api" ]
    restart: always

  db:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=brickstorage_db
      - POSTGRES_USER=brickstorage_user
      - POSTGRES_PASSWORD=brickstorage_pass
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U brickstorage_user -d brickstorage_db" ]
      interval: 3s
      timeout: 5s
      retries: 5
    restart: always

#    volumes:
#      - pg_data:/var/lib/postgresql/data/pg_data
#    environment:
#      POSTGRES_PASSWORD: example
#      POSTGRES_DB: example
#      POSTGRES_USER: example
#      POSTGRES_HOST: pg.example_net
#      POSTGRES_PORT: 5432
#      PGDATA: /var/lib/postgresql/data/pg_data
#networks:
#  net:
#volumes:
#  pg_data:

#  volumes:
#    - db_data:/var/lib/postgresql/data
#    - ./init.sql:/docker-entrypoint-initdb.d/init.sql

#  migrations:
#    image: migrate/migrate
#    command: -database postgres://postgres:password@database:5432/database?sslmode=disable -path /migrations up
#    volumes:
#      - ./migrations:/migrations
#    working_dir: /migrations